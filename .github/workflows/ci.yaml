name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          dvc repro
      
      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          python -m unittest tests/test_model.py
      
      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          python scripts/promote_model.py
      
      - name: Run flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          python -m unittest tests/test_flask_app.py
      
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      
      - name: Build Docker image
        if: success()
        run: |
          docker build -t ${{secrets.DOCKER_HUB_USERNAME}}/emotion2:latest .
      
      - name: Push Docker image to Docker Hub
        if: success()
        run: |
          docker push ${{secrets.DOCKER_HUB_USERNAME}}/emotion2:latest

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
          aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 698031349183.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t mini_project_ecr .
      
      - name: Tag Docker image
        run: |
          docker tag mini_project_ecr:latest 698031349183.dkr.ecr.us-east-1.amazonaws.com/mini_project_ecr:latest
      
      - name: Push Docker image to AWS ECR
        run: |
          docker push 698031349183.dkr.ecr.us-east-1.amazonaws.com/mini_project_ecr:latest

      